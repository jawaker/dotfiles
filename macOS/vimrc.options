if &compatible
  set nocompatible
end

filetype off

let mapleader = ","
let g:mapleader = ","
" let base16colorspace=256

let g:airline_theme                      = 'quantum' " wombat, base16_pop, base16_summerfruit, simple
let g:airline#extensions#tabline#enabled = 1
" let g:airline_powerline_fonts            = 1

" NERDTree
let NERDTreeQuitOnOpen          = 1
let NERDChristmasTree           = 1
let NERDTreeHighlightCursorline = 1
let NERDTreeShowHidden          = 1
let NERDTreeShowBookmarks=1
let NERDTreeMapActivateNode     = '<CR>'
let g:NERDTreeDirArrows=0

" rails.vim
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1

" Ag and Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  let g:ctrlp_use_command = 0

  " ag is fast enough that CtrlP doesn't need to cache
  " let g:ctrlp_use_caching = 0
endif

" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!

" Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list            = 1
let g:syntastic_check_on_open            = 1
let g:syntastic_check_on_wq              = 0
let g:syntastic_javascript_checkers      = ['jshint']
let g:syntastic_html_checkers            = ['jshint']
let g:syntastic_ruby_checkers            = ['rubocop']
let g:syntastic_haml_checkers            = ['haml_lint']
let g:syntastic_scss_checkers            = [ 'sass_lint' ] " npm install -g sass-lint
let g:syntastic_sass_sass_args           = '-I ' . getcwd()
let g:syntastic_html_tidy_ignore_errors  = [
      \  '<html> attribute "lang" lacks value',
      \  '<a> attribute "href" lacks value',
      \  'trimming empty <span>',
      \  'trimming empty <h1>',
      \  'trimming empty <p>',
      \  'inserting implicit <p>'
      \ ]
let g:elm_syntastic_show_warnings = 1

" Ultisnips
let g:UltiSnipsEditSplit           = "vertical"
let g:UltiSnipsExpandTrigger       = "<tab>"
let g:UltiSnipsJumpForwardTrigger  = "<c-b>"
let g:UltiSnipsJumpBackwardTrigger = "<c-z>"
" let g:UltiSnipsUsePythonVersion    = 2.7

filetype on
